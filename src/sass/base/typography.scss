$font-stack: 'Merriweather', Georgia, Cambria, 'Times New Roman', Times, serif;

// breakpoint variables
$lg: 1170px;
$md: 1024px;
$sm: 640px;
$xs: 480px;

// Set the font sizes for all screen sizes
$h1-font-size: (
    null: 43,
    $md: 35,
    $sm: 30,
    $xs: 28,
);
$h2-font-size: (
    null: 34,
    $md: 28,
    $sm: 30,
    $xs: 24,
);
$h3-font-size: (
    null: 30,
    $md: 27,
    $sm: 25,
    $xs: 22,
);
$h4-font-size: (
    null: 24,
    $md: 22,
    $sm: 21,
    $xs: 21,
);
$p-font-size: (
    null: 20,
    $md: 20,
    $sm: 19,
    $xs: 18,
);

$body-line-height: 1.6;
$heading-line-height: 1.25;

body {
    color: rgba(0, 0, 0, 0.84);
    word-wrap: break-word;
}

body,
input,
textarea,
option,
select {
    font-family: $font-stack;
    -webkit-font-smoothing: antialiased !important;
    -moz-osx-font-smoothing: grayscale !important;
    font-weight: 400;
    line-height: $body-line-height;
    text-rendering: optimizeLegibility !important;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

p,
input,
textarea,
select,
option,
a {
    color: inherit;
    font-size: inherit;
}

p a {
    display: inline;
}

p,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
dd,
figure,
pre,
hr,
blockquote,
form,
noscript,
iframe {
    margin-bottom: 0.825rem;
    margin-left: 0;
    margin-right: 0;
    margin-top: 0;
    padding-bottom: 0;
    padding-left: 0;
    padding-right: 0;
    padding-top: 0;
    text-rendering: optimizeLegibility;
}

blockquote *:last-child,
li *:last-child,
p *:last-child {
    margin-bottom: 0;
}

blockquote {
    border-left: 5px solid #eee;
    font-style: italic;
    margin: to-rem(15) 0;
    padding: to-rem(10) to-rem(20);
}

p {
    line-height: $body-line-height;
    margin-bottom: 1em;
}

i,
.i,
em {
    font-style: italic;
}

b,
.b,
strong {
    font-weight: 700;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: 700;
    line-height: $heading-line-height;
}

h2 {
    margin-top: 1em;
}

h3,
h4,
h5,
h6 {
    margin-bottom: 0.5em;
    margin-top: 1em;
}

ul,
ol {
    list-style-image: none;
    list-style-position: outside;
    margin-bottom: 1.45rem;
    margin-left: 1.45rem;
}

li > ol,
li > ul {
    margin-bottom: calc(1.45rem / 2);
    margin-left: 1.45rem;
    margin-top: 0;
}

li li {
    font-size: 1em;
}

strong,
bold {
    font-weight: 700;
}

em,
i {
    font-style: italic;
}

li {
    position: relative;
}

hr {
    margin: 1.5em 0;
}

code,
kbd,
samp {
    font-size: 0.85rem;
    line-height: 1.45rem;
}

thead {
    text-align: left;
}

td,
th {
    border-bottom: 1px solid hsla(0, 0%, 0%, 0.12);
    -moz-font-feature-settings: 'tnum';
    -ms-font-feature-settings: 'tnum';
    -webkit-font-feature-settings: 'tnum';
    font-feature-settings: 'tnum';
    padding-bottom: calc(0.725rem - 1px);
    padding-left: 0.96667rem;
    padding-right: 0.96667rem;
    padding-top: 0.725rem;
    text-align: left;
}

th:first-child,
td:first-child,
th:last-child,
td:last-child {
    padding-right: 0;
}

tt,
code {
    background-color: hsla(0, 0%, 0%, 0.04);
    border-radius: 3px;
    font-family: 'SFMono-Regular', Consolas, 'Roboto Mono', 'Droid Sans Mono',
        'Liberation Mono', Menlo, Courier, monospace;
    padding: 0;
    padding-bottom: 0.2em;
    padding-top: 0.2em;
}

pre code {
    background: none;
    font-size: 1rem !important;
    line-height: 1.42;
}

pre {
    background: #f4f4f4;
    border: 1px solid #ddd;
    display: block;
    margin: 1.6em 0 !important;
    max-width: 100%;
    overflow: auto;
    padding: 1em 1.5em;
    page-break-inside: avoid;
    word-wrap: break-word;
}

code:before,
code:after,
tt:before,
tt:after {
    content: ' ';
    letter-spacing: -0.2em;
}

pre code:before,
pre code:after,
pre tt:before,
pre tt:after {
    content: '';
}

// breakpoint mixin
@mixin breakpoint($mq01: 0, $mq2: false, $maxmin: max-width) {
    @if $mq2 == false {
        @media ($maxmin: $mq01) {
            @content;
        }
    } @else {
        @media (min-width: $mq01) and (max-width: $mq2) {
            @content;
        }
    }
}

// responsive font size mixin
@mixin font-size-map($font-size-map) {
    @each $breakpoint, $font-size in $font-size-map {
        @if $breakpoint == null {
            font-size: to-rem($font-size);
        } @else {
            @include breakpoint($breakpoint) {
                font-size: to-rem($font-size);
            }
        }
    }
}

h1 {
    @include font-size-map($h1-font-size);
}

h2 {
    @include font-size-map($h2-font-size);
}

h3 {
    @include font-size-map($h3-font-size);
}

h4,
h5 {
    @include font-size-map($h4-font-size);
}

li,
p {
    @include font-size-map($p-font-size);
}
